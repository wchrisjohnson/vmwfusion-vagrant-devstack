[[local|localrc]]

# Credentials
# -----
ADMIN_PASSWORD={{ password }}
MYSQL_PASSWORD={{ password }}
RABBIT_PASSWORD={{ password }}
SERVICE_PASSWORD={{ password }}
SERVICE_TOKEN={{ service_token }}


# Glance
# -----
GLANCE_BRANCH={{ branch }}


# DO NOT UNCOMMENT - This is now handled by an ansible provision step after devstack in up
# 32bit image (~660MB)
#IMAGE_URLS+=",http://cloud-images.ubuntu.com/releases/14.04.1/release/ubuntu-14.04-server-cloudimg-i386.tar.gz"
#IMAGE_URLS+=",http://fedorapeople.org/groups/heat/prebuilt-jeos-images/F19-i386-cfntools.qcow2"
# 64bit image (~640MB)
#IMAGE_URLS+=",http://cloud-images.ubuntu.com/releases/14.04.1/release/ubuntu-14.04-server-cloudimg-amd64.tar.gz"
#IMAGE_URLS+=",http://fedorapeople.org/groups/heat/prebuilt-jeos-images/F19-x86_64-cfntools.qcow2"
#IMAGE_URLS+=",http://mirror.chpc.utah.edu/pub/fedora/linux/releases/20/Images/x86_64/Fedora-x86_64-20-20131211.1-sda.qcow2"


# Horizon
# -----
HORIZON_BRANCH={{ branch }}


# Keystone
# -----
KEYSTONE_BRANCH={{ branch }}
KEYSTONE_TOKEN_FORMAT=PKI


# Nova
# -----
NOVA_BRANCH={{ branch }}
SCHEDULER=nova.scheduler.chance.ChanceScheduler


# Neutron
# -----
NEUTRON_BRANCH={{ branch }}

disable_service tempest
disable_service cinder
#disable_service heat

disable_service n-net
enable_service neutron
enable_service q-svc
enable_service q-agt
enable_service q-dhcp
enable_service q-l3
enable_service q-meta

# Optional, to enable tempest configuration as part of devstack
#enable_service tempest
#enable_service neutron
#enable_service q-fwaas
#enable_service q-lbaas
#enable_service q-vpn

Q_PLUGIN=ml2
Q_ML2_PLUGIN_TYPE_DRIVERS=local,flat,gre
Q_ML2_PLUGIN_MECHANISM_DRIVERS=openvswitch

PUBLIC_NETWORK_NAME=Ext-Net

# Heat
# -----
HEAT_BRANCH={{ branch }}
ENABLED_SERVICES+=,heat,h-api,h-api-cfn,h-api-cw,h-eng
HEAT_STANDALONE=True


# Cinder
# -----
CINDER_BRANCH={{ branch }}


# Ceilometer
# -----
#CEILOMETER_BRANCH={{ branch }}
#ENABLED_SERVICES+=,ceilometer-acompute,ceilometer-acentral,ceilometer-collector,ceilometer-api
#ENABLED_SERVICES+=,ceilometer-alarm-notify,ceilometer-alarm-eval


# Swift
# -----
enable_service s-proxy s-object s-container s-account
SWIFT_BRANCH={{ branch }}
SWIFT_HASH={{ swift_hash }}
SWIFT_REPLICAS={{ swift_replicas }}
SWIFT_DATA_DIR={{ dest }}/data

# Logging
# -----
LOGFILE={{ dest }}/logs/stack.sh.log
LOGDAYS={{ logdays }}
VERBOSE=True
# LOG_COLOR=False
SCREEN_LOGDIR={{ dest }}/logs/screen

# HOST
# -----
HOST_IP={{host_ip}}
SERVICE_HOST={{host_ip}}
DATABASE_HOST={{host_ip}}
RABBIT_HOST={{host_ip}}

RECLONE={{ reclone }}
# OFFLINE=True
# MULTI_HOST=True
API_RATE_LIMIT={{ api_rate_limit }}

[[post-config|$NOVA_CONF]]
[DEFAULT]
scheduler_default_filters=AllHostsFilter

[[post-config|$GLANCE_API_CONF]]
[DEFAULT]
default_store=file

[[post-config|/$Q_PLUGIN_CONF_FILE]]
[DEFAULT]
# tunnel_types=gre
